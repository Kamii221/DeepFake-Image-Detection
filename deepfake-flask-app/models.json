{
    "efficientnet_b0_gelu": {
        "name": "EfficientNet-B0 with GELU",
        "description": "Lightweight model optimized for faster processing",
        "architecture": {
            "backbone": "EfficientNet-B0",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 1280, "out_features": 128},
                    {"type": "BatchNorm1d", "features": 128},
                    {"type": "GELU"},
                    {"type": "Dropout", "p": 0.5},
                    {"type": "Linear", "in_features": 128, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "efficientnet_b0_leakyrelu": {
        "name": "EfficientNet-B0 with LeakyReLU",
        "description": "Enhanced gradient flow for better learning",
        "architecture": {
            "backbone": "EfficientNet-B0",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 1280, "out_features": 128},
                    {"type": "BatchNorm1d", "features": 128},
                    {"type": "LeakyReLU", "negative_slope": 0.01},
                    {"type": "Dropout", "p": 0.5},
                    {"type": "Linear", "in_features": 128, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "efficientnet_b1_gelu": {
        "name": "EfficientNet-B1 with GELU",
        "description": "Improved accuracy with moderate speed",
        "architecture": {
            "backbone": "EfficientNet-B1",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 1280, "out_features": 128},
                    {"type": "BatchNorm1d", "features": 128},
                    {"type": "GELU"},
                    {"type": "Dropout", "p": 0.5},
                    {"type": "Linear", "in_features": 128, "out_features": 1}
                ]
            }
        },
        "input_size": [240, 240]
    },
    "efficientnet_b1_leakyrelu": {
        "name": "EfficientNet-B1 with LeakyReLU",
        "description": "Better handling of negative values",
        "architecture": {
            "backbone": "EfficientNet-B1",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 1280, "out_features": 128},
                    {"type": "BatchNorm1d", "features": 128},
                    {"type": "LeakyReLU", "negative_slope": 0.01},
                    {"type": "Dropout", "p": 0.5},
                    {"type": "Linear", "in_features": 128, "out_features": 1}
                ]
            }
        },
        "input_size": [240, 240]
    },
    "ensemble_gelu": {
        "name": "Ensemble Model with GELU",
        "description": "Combined power of EfficientNet-B1, ViT, and ResNet-50",
        "architecture": {
            "backbone": "Ensemble",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 4096, "out_features": 256},
                    {"type": "BatchNorm1d", "features": 256},
                    {"type": "GELU"},
                    {"type": "Dropout", "p": 0.5},
                    {"type": "Linear", "in_features": 256, "out_features": 128},
                    {"type": "BatchNorm1d", "features": 128},
                    {"type": "GELU"},
                    {"type": "Dropout", "p": 0.3},
                    {"type": "Linear", "in_features": 128, "out_features": 64},
                    {"type": "BatchNorm1d", "features": 64},
                    {"type": "GELU"},
                    {"type": "Linear", "in_features": 64, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "ensemble_leakyrelu": {
        "name": "Ensemble Model with LeakyReLU",
        "description": "Enhanced ensemble with LeakyReLU activation for better gradient flow",
        "architecture": {
            "backbone": "Ensemble",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 4096, "out_features": 256},
                    {"type": "BatchNorm1d", "features": 256},
                    {"type": "LeakyReLU", "negative_slope": 0.01},
                    {"type": "Dropout", "p": 0.5},
                    {"type": "Linear", "in_features": 256, "out_features": 128},
                    {"type": "BatchNorm1d", "features": 128},
                    {"type": "LeakyReLU", "negative_slope": 0.01},
                    {"type": "Dropout", "p": 0.3},
                    {"type": "Linear", "in_features": 128, "out_features": 64},
                    {"type": "BatchNorm1d", "features": 64},
                    {"type": "LeakyReLU", "negative_slope": 0.01},
                    {"type": "Linear", "in_features": 64, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "vit_base_patch16_224": {
        "name": "Vision Transformer Base Patch16 224",
        "description": "Transformer-based model for image classification",
        "architecture": {
            "backbone": "ViT Base Patch16 224",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 768, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "resnet50": {
        "name": "ResNet-50",
        "description": "Residual Network with 50 layers",
        "architecture": {
            "backbone": "ResNet-50",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 2048, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "deepfake_pipeline": {
        "name": "Deepfake Detection Pipeline (EfficientNet + ViT)",
        "description": "Pipeline combining EfficientNet and ViT for deepfake detection",
        "architecture": {
            "backbone": "EfficientNet-B0 + ViT Base Patch16 224",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 768, "out_features": 256},
                    {"type": "ReLU"},
                    {"type": "Dropout", "p": 0.3},
                    {"type": "Linear", "in_features": 256, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    },
    "hybrid": {
        "name": "Hybrid (ResNet + ViT + EffNet)",
        "description": "Hybrid model combining ResNet, ViT, and EfficientNet",
        "architecture": {
            "backbone": "ResNet-50 + ViT Base Patch16 224 + EfficientNet-B0",
            "classifier": {
                "layers": [
                    {"type": "Linear", "in_features": 4096, "out_features": 512},
                    {"type": "ReLU"},
                    {"type": "Dropout", "p": 0.4},
                    {"type": "Linear", "in_features": 512, "out_features": 256},
                    {"type": "ReLU"},
                    {"type": "Dropout", "p": 0.3},
                    {"type": "Linear", "in_features": 256, "out_features": 1}
                ]
            }
        },
        "input_size": [224, 224]
    }
}
